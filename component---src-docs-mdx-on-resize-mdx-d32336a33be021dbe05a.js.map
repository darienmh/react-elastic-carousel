{"version":3,"sources":["webpack:///../src/docs/mdx/onResize.mdx"],"names":["_frontmatter","Object","isExtensible","hasOwnProperty","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","_ref2","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","Playground","__position","__code","__scope","Props","Carousel","Item","breakPoints","onResize","currentBreakPoint","console","log","isMDXComponent"],"mappings":"uUASaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,OAAAG,eAAA,eAAAF,OAAAG,eAAAJ,EAAA,cAAAK,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,+BAC/B,IAAMC,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAAAC,EAFDC,EAAUF,EAAVE,WACGC,EAAKC,YAAAJ,EAAAK,GAER,OAAOC,YAACT,EAASU,YAAA,GAAKX,EAAiBO,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,YAAU,YAElBA,YAAA,MACE,GAAM,gLAA8K,yBACzJA,YAAA,cAAYG,WAAW,MAAI,YAA0B,iBAAkBH,YAAA,cAAYG,WAAW,MAAI,YAA0B,mCAAoCH,YAAA,cAAYG,WAAW,MAAI,UAAwB,0DAA2DH,YAAA,cAAYG,WAAW,MAAI,cAA4B,uBAClWH,YAAA,WAAKA,YAAA,QAAMG,WAAW,OAAK,uCAE3BH,YAACI,IAAU,CAACC,WAAY,EAAGC,OAAQ,mQAAoQC,SAAOZ,EAAA,CAC5SE,QACAL,kBACAY,eACAI,UACAC,aACAC,SACAC,iBAAWhB,EAAA,cACXH,IAAaG,EACbd,eAAYc,GACXO,QAAQ,cACXF,YAACS,IAAQ,CAACE,YAAaA,IAAaC,SAAU,SAAAC,GAAiB,OAAIC,QAAQC,IAAIF,IAAoBX,QAAQ,YAC3GF,YAACU,IAAI,CAACR,QAAQ,QAAO,KACrBF,YAACU,IAAI,CAACR,QAAQ,QAAO,KACrBF,YAACU,IAAI,CAACR,QAAQ,QAAO,KACrBF,YAACU,IAAI,CAACR,QAAQ,QAAO,KACrBF,YAACU,IAAI,CAACR,QAAQ,QAAO,KACrBF,YAACU,IAAI,CAACR,QAAQ,QAAO,aAKxB,IAAAT,UAAAX,OAAAW,IAAAX,OAAAC,aAAAU,OAAAT,eAAA,eAAAF,OAAAG,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,+BAEDI,EAAWuB,gBAAiB","file":"component---src-docs-mdx-on-resize-mdx-d32336a33be021dbe05a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/darien/WebstormProjects/react-elastic-carousel/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Carousel from 'react-elastic-carousel';\nimport Item from '../components/SimpleItem';\nimport breakPoints from '../components/breakPoints';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"onresize\"\n    }}>{`onResize`}</h1>\n    <h4 {...{\n      \"id\": \"you-can-listen-to-the-onresize-event-of-the-carousel-this-will-get-invoked-on-each-resize-event-of-the-root-element-and-will-return-the-current-breakpoint-object-being-used\"\n    }}>{`You can listen to the `}<inlineCode parentName=\"h4\">{`onResize`}</inlineCode>{` event of the `}<inlineCode parentName=\"h4\">{`Carousel`}</inlineCode>{`, this will get invoked on each `}<inlineCode parentName=\"h4\">{`resize`}</inlineCode>{` event of the root element and will return the current `}<inlineCode parentName=\"h4\">{`breakPoint`}</inlineCode>{` object being used:`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`(currentBreakPoint) => {/*...*/}\n`}</code></pre>\n    <Playground __position={0} __code={'<Carousel\\n    breakPoints={breakPoints}\\n    onResize={currentBreakPoint => console.log(currentBreakPoint)}\\n  >\\n    <Item>1\\n    <Item>2</Item>\\n    <Item>3</Item>\\n    <Item>4</Item>\\n    <Item>5</Item>\\n    <Item>6</Item>\\n  </Carousel>\\n</Playground>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Carousel,\n      Item,\n      breakPoints,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Carousel breakPoints={breakPoints} onResize={currentBreakPoint => console.log(currentBreakPoint)} mdxType=\"Carousel\">\n    <Item mdxType=\"Item\">1</Item>\n    <Item mdxType=\"Item\">2</Item>\n    <Item mdxType=\"Item\">3</Item>\n    <Item mdxType=\"Item\">4</Item>\n    <Item mdxType=\"Item\">5</Item>\n    <Item mdxType=\"Item\">6</Item>\n    </Carousel>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}